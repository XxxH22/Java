# Java
接口程序实验
一、 实验目的
1.掌握Java中抽象类和抽象方法的定义；
2.掌握Java中接口的定义，熟练掌握接口的定义形式以及接口的实现方法
3.了解异常的使用方法，并在程序中根据输入情况做异常处理

二、 实验内容
某学校为了给学生提供勤工俭学机会，也减轻授课教师的部分压力，准许博士研究生参与课程的助教工作。此时，该博士研究生有双重身份：学生和助教教师。
1.设计两个管理接口：学生管理接口和教师管理接口。学生接口必须包括缴纳学费、查学费的方法；教师接口包括发放薪水和查询薪水的方法。
2.设计博士研究生类，实现上述的两个接口，该博士研究生应具有姓名、性别、年龄、每学期学费、每月薪水等属性。
3.编写测试类，并实例化至少两名博士研究生，统计他们的年收入和学费。根据两者之差，算出每名博士研究生的年应纳税金额。

三、 实验要求
1.在”博士研究生类”中实现各个接口定义的抽象方法;
2.对年学费和年收入进行统计，用收入减去学费，求得纳税额；
3.国家最新纳税标准（系数），属于某一时期的特定固定值，与实例化对象没有关系，考虑如何用static final修饰定义。
4.实例化研究生类时，可采用运行时通过main方法的参数args一次性赋值，也可采用Scanner类实现运行时交互式输入。
5.根据输入情况，要在程序中做异常处理。

四、实验流程
1.设立两个接口，学生管理接口和教师管理接口，并声明缴纳学费，查询学费（学生管理接口），支付薪水，查询薪水（教师管理接口）。设计博士研究生类，利用set与get方法来实现以上两个接口，添加姓名，性别，年龄，每学期学费，每月薪水属性。
2.对博士研究生类进行复写（toString），以便在Test类中输出。
3.自定义异常类Aexception，以便在Test类中能使用户输入正确的姓名。
4.设计Test类
(1) 用static final定义修饰个人所得税系数z1，z2
(2) 建立博士研究生类数组x[2]
(3) 利用for循环初始化数组中每个元素
(4) 利用Scanner类变量，set函数，完成对博士研究生类中的各个元素进行赋值 
(5) 利用try……catch语句，来捕获对博士研究生类赋值过程中的异常，并利用while(true)死循环来设定，只有用户正确输入后，程序才会往下运行。
(6) 利用正则表达式与try……语句，以及自定义异常，throw语句，来规定只有用户输入姓名时，全为英文，程序才会向下运行。
(7) 利用for循环来遍历博士研究生类数组中每一个数组下标，并设立while(true)
(8) 利用Switch，Scanner语句来设计查询列表，完成当用户输入相关功能代码时，程序实现指定功能，并利用break<标签>，来实现跳出以上循环。
(9) 利用if语句判断，当博士研究生的学费与薪水的差值为不同税率时，计算不同情况下的个人所得税与税后薪水。
5.程序结束

五、核心代码

class DoctoralCandidate implements StudentManager, TeacherManager {
    private String name;
    private String sex;
    private int age;
    double fees;
    private double roll;

    DoctoralCandidate(){

    }

    public void setName(String name) {
        this.name = name;
    }

    public void setSex(String sex) {
        this.sex = sex;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public void setFees(double fees) {
        this.fees = fees;
    }

    public void setRoll(double roll) {
        this.roll = roll;
    }

    public void PayFees() {
        while (true) {
            Scanner x = new Scanner(System.in);
            double Fees = x.nextDouble();
            if (Fees - fees > 0) {
                System.out.println("您输入金额有误，请重新缴纳");
            } else if (Fees - fees < 0) {
                System.out.println("您输入金额有误，请重新缴纳");
            } else {
                System.out.println("您已成功缴纳");
                break;
            }
        }
    }



    public double CheckTuition(){
        return fees;
    }

    public double PayRoll(){
        return roll;
    }
    public double QuerySalary() {
        return roll;
    }

    public String toString() {
        return "学生信息为{" + "姓名'" + name + ", 性别'" + sex + ", 年龄" + age + ", 学费(每学期)" + fees + ", 收入(税前每月)" + roll + '}';
    }
}

六、运行截图
![](https://github.com/XxxH22/Java/blob/main/%E8%BF%90%E8%A1%8C%E6%88%AA%E5%9B%BE.png)





